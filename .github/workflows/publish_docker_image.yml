---
name: CI to Docker hub

on:
  push:
    # Only publish Docker image only on semver tag.
    tags:
      - "v*.*.*"

  # Run lint, build and test jobs for any PRs.
  pull_request:

env:
  DOCKER_IMAGE: "mvignjevic/bats-with-helpers"

jobs:
  lint:
    name: Run linters against test_helpers.bash and Dockerfile
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository under $GITHUB_WORKSPACE, so workflow can access it.
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run linters
        run: make lint

  test_build:
    name: Build Docker image and exercise tests from test-example.bats
    # Ensure lint job passes before building image and testing.
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v2
        with:
          submodules: recursive

      # - name: Docker meta to get semver version
      #   id: docker_meta
      #   uses: crazy-max/ghaction-docker-meta@v1
      #   with:
      #     # List of Docker images to use as base name for tags
      #     images: ${DOCKER_IMAGE}
      #     tag-semver: "{{version}}"

      - name: Docker meta to get semver version
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          # List of Docker images to use as base name for tags
          images: ${DOCKER_IMAGE}
          tag-semver: |
            {{version}}
            {{major}}.{{minor}}
            {{major}}

      - name: Echo docker_meta
        run: |
          echo "tags: ${{ steps.docker_meta.outputs.tags }}"
          echo "version: ${{ steps.docker_meta.outputs.version }}"

      # - name: Build image using the latest tag
      #   run: make build VERSION=${{ steps.docker_meta.outputs.version }}

      # - name: Run test-example.bats unit tests against previously built Docker image
      #   run: make test VERSION=${{ steps.docker_meta.outputs.version }}

  # push:
  #   if: "github.event_name != 'pull_request'"
  #   name: Build and publish Docker images to Docker Hub
  #   needs: test_build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository and submodules
  #       uses: actions/checkout@v2
  #       with:
  #         submodules: recursive

  #     - name: Docker meta to get semver version
  #       id: docker_meta
  #       uses: crazy-max/ghaction-docker-meta@v1
  #       with:
  #         # List of Docker images to use as base name for tags
  #         images: ${DOCKER_IMAGE}
  #         tag-semver: |
  #           {{version}}
  #           {{major}}.{{minor}}
  #           {{major}}

  #     - name: Set up Docker Buildx
  #       id: buildx
  #       uses: docker/setup-buildx-action@v1

  #     - name: Cache Docker layers
  #       uses: actions/cache@v2
  #       with:
  #         path: /tmp/.buildx-cache
  #         key: ${{ runner.os }}-buildx-${{ github.sha }}
  #         restore-keys: |
  #           ${{ runner.os }}-buildx-

  # - name: Login to Docker Hub
  #   uses: docker/login-action@v1
  #   with:
  #     username: ${{ secrets.DOCKER_HUB_USERNAME }}
  #     password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

  # - name: Build and push
  #   id: docker_build
  #   uses: docker/build-push-action@v2
  #   with:
  #     context: ./
  #     file: ./Dockerfile
  #     builder: ${{ steps.buildx.outputs.name }}
  #     push: ${{ github.event_name != 'pull_request' }}
  #     tags: ${{ steps.docker_meta.outputs.tags }}
  #     labels: ${{ steps.docker_meta.outputs.labels }}
  #     cache-from: type=local,src=/tmp/.buildx-cache
  #     cache-to: type=local,dest=/tmp/.buildx-cache

  # - name: Image digest
  #   run: echo ${{ steps.docker_build.outputs.digest }}

---
name: CI to Docker hub

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches: [master]
    # Publish `v1.2.3` tags as releases.
    tags:
      - "v*.*.*"

  # Run lint, build, test jobs for any PRs.
  pull_request:

env:
  IMAGE_NAME: bats-with-helpers
  IMAGE_ID: mvignjevic/$IMAGE_NAME

jobs:
  lint:
    name: Run linters against test_helpers.bash and Dockerfile
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository under $GITHUB_WORKSPACE, so workflow can access it.
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run linters
        run: make lint

  build:
    name: Build Docker image with labels
    # Ensure lint job passes before building image.
    needs: lint
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: "1"
      VERSION: "commit tag ???"

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # - name: Find version
      #   run: |
      #     # Make sure IMAGE_ID is all in lowercase
      #     IMAGE_ID=$(echo $IMAGE_ID | tr '[:upper:]' '[:lower:]')

      #     echo "${{ github.ref }}"

      #     # Strip git ref prefix from version
      #     VERSION=$(echo "${{ github.ref }}" | sed -e 's|.*/\(.*\)|\1|')

      #     echo $VERSION

      #     # Strip "v" prefix from tag name
      #     [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

      #     echo $VERSION

      #     # Use Docker `latest` tag convention
      #     [[ "$VERSION" == "master" ]] && VERSION=latest

      #     echo IMAGE_ID=$IMAGE_ID
      #     echo VERSION=$VERSION

      # - name: Echo version
      #   run: echo $VERSION

      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: name/app # List of Docker images to use as base name for tags
          tag-semver: |
            {{version}}
            {{major}}.{{minor}}

      - name: Echo docker_meta
        run: |
          echo "tags: ${{ steps.docker_meta.outputs.tags }}"
          echo "labels: ${{ steps.docker_meta.outputs.labels }}"
          echo "version: ${{ steps.docker_meta.outputs.version }}"

      # - name: Build image
      #   run: make build VERSION=0.0.1
      #   # run: make build

  # test:
  #   name: Running test-example.bats unit tests using Docker image
  #   # Ensure build job passes before building image.
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: Run test
  #       # run: make test
  #       run: make test VERSION=0.0.1
